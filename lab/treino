//int isEmpty(IntegerList *){}

// A simple C program to introduce linked lists 
#include <stdio.h> 
#include <stdlib.h> 
#include <iostream>
using namespace std;
// A linked list node 
struct Node { 
    int data; 
    struct Node* next; 
}; 

// Program to create a simple linked list with 3 nodes 
int main() 
{ 
    struct Node* head   = NULL; 
    struct Node* second = NULL; 
    struct Node* third  = NULL; 
  
    // allocate 3 nodes in the heap 
    head   = (struct Node*)malloc(sizeof(struct Node)); 
    second = (struct Node*)malloc(sizeof(struct Node)); 
    third  = (struct Node*)malloc(sizeof(struct Node));


	//head->data = 1;      // assign data in first node 
	//head->next = second; // Link 1st node with the 2nd node

	//second->data = 2; 
  
    // Link second node with the third node 
    //second->next = third; 




    //Declara MinhaLista
    int a = 0;

    while(cin >> MinhaLista)
    {
    	MinhaLista.pop();
    	a ++;
    }

    cout << "O tamanho da lista Ã©: " << a << endl;






    // assign data to second node 
    // second->data = 2; 
  
    // Link second node with the third node 
    // second->next = third; 
  
    /* data has been assigned to the data part of the second 
     block (block pointed by second). And next 
     pointer of the second block points to the third  
     block. So all three blocks are linked. 

 third->data = 3; // assign data to third node 
 third->next = NULL; 

 /* data has been assigned to data part of third 
 block (block pointed by third). And next pointer 
 of the third block is made NULL to indicate 
 that the linked list is terminated here. 
  
 We have the linked list ready.   
  
           head     
             | 
             |  
        +---+---+     +---+---+       +----+------+ 
        | 1  | o----->|  2  | o-----> |  3 | NULL | 
        +---+---+     +---+---+       +----+------+        
     
    Note that only head is sufficient to represent  
    the whole list.  We can traverse the complete  
    list by following next pointers.    */
  	if(second == NULL)
  	{

  		cout << "Rodei" << endl;
  	}

  	else
  	{
  		cout << "Dancei" << endl;	
  	}



  /*	if(head == NULL)
  	{

  		cout << "Rodei" << endl;
  	}

  	else
  	{
  		cout << "Dancei" << endl;	
  	}*/
  	
    return 0; 
}
